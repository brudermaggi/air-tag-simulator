name: Security Scan Pipeline
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  
  workflow_dispatch:  
permissions:
  contents: read
jobs:
  bandit:
      name: Run Bandit Security Check
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
  
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.x'
  
        - name: Install Bandit
          run: |
            python -m pip install --upgrade pip
            pip install bandit
  
        - name:  Run Bandit with Logging
          run: |
            echo "Running Bandit static code analysis..."
            bandit -r . -x tests -f txt -ll | tee bandit-output.txt
            echo ""
            echo "----- Bandit Issues Found (if any) -----"
            cat bandit-output.txt
  
        - name: ❌ Fail if Bandit finds issues
          run: |
            bandit -r . -x tests -f json -o bandit-result.json -ll
            issues=$(jq '.results | length' bandit-result.json)
            if [ "$issues" -gt 0 ]; then
              echo "❗ Bandit found $issues issue(s). Failing the build."
              exit 1
            else
              echo "✅ No issues found by Bandit."
            fi
  container-security-scan:
    name: Container Security Scan with Trivy
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Find all Dockerfiles
        id: find-dockerfiles
        run: |
          echo "Searching for Dockerfiles in the repository..."
          DOCKERFILES=$(find . -type f \( -name "Dockerfile" -o -name "dockerfile" \) | tr '\n' ' ')
          if [ -z "$DOCKERFILES" ]; then
            echo "No Dockerfiles found in the repository"
            echo "found=false" >> $GITHUB_OUTPUT
          else
            echo "Found Dockerfiles: $DOCKERFILES"
            echo "found=true" >> $GITHUB_OUTPUT
            echo "files=$DOCKERFILES" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and Scan Docker images
        if: steps.find-dockerfiles.outputs.found == 'true'
        run: |
          COUNTER=1
          for dockerfile in $(find . -type f \( -name "Dockerfile" -o -name "dockerfile" \)); do
            echo "Processing: $dockerfile"
            IMAGE_TAG="app-image-${COUNTER}:${{ github.sha }}"
            CONTEXT_DIR=$(dirname "$dockerfile")
            
            echo "Building image from $dockerfile with context $CONTEXT_DIR"
            docker build -f "$dockerfile" -t "$IMAGE_TAG" "$CONTEXT_DIR"
            
            echo "Scanning $IMAGE_TAG with Trivy..."
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
              aquasec/trivy:latest image --format table --severity CRITICAL,HIGH,MEDIUM "$IMAGE_TAG" | tee "trivy-results-${COUNTER}.txt"
            
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
              aquasec/trivy:latest image --format sarif --severity CRITICAL,HIGH,MEDIUM --output "/tmp/trivy-results-${COUNTER}.sarif" "$IMAGE_TAG"
            
            COUNTER=$((COUNTER + 1))
          done
      
      - name: Display all Trivy results
        if: steps.find-dockerfiles.outputs.found == 'true'
        run: |
          echo "# Container Security Scan Results"
          for result in trivy-results-*.txt; do
            if [ -f "$result" ]; then
              echo "=== Results from $result ==="
              cat "$result"
              echo ""
            fi
          done
      
      - name: Upload Trivy artifacts
        uses: actions/upload-artifact@v4
        if: always() && steps.find-dockerfiles.outputs.found == 'true'
        with:
          name: trivy-scan-results
          path: |
            trivy-results-*.sarif
            trivy-results-*.txt
          retention-days: 30
      
      - name: Check for critical vulnerabilities
        if: steps.find-dockerfiles.outputs.found == 'true'
        run: |
          TOTAL_CRITICAL=0
          for sarif in trivy-results-*.sarif; do
            if [ -f "$sarif" ]; then
              CRITICAL_COUNT=$(jq '[.runs[].results[] | select(.level=="error")] | length' "$sarif" || echo "0")
              echo "Critical/High vulnerabilities in $sarif: $CRITICAL_COUNT"
              TOTAL_CRITICAL=$((TOTAL_CRITICAL + CRITICAL_COUNT))
            fi
          done
          echo "Total Critical/High vulnerabilities: $TOTAL_CRITICAL"
          if [ "$TOTAL_CRITICAL" -gt 0 ]; then
            echo "::warning::Found $TOTAL_CRITICAL critical/high vulnerabilities across all container images"
          fi
  
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for requirements.txt
        id: check-requirements
        run: |
          if [ -f "requirements.txt" ]; then
            echo "requirements.txt found"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "requirements.txt not found, skipping Python dependency check"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup Python
        if: steps.check-requirements.outputs.exists == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Install Python dependencies
        if: steps.check-requirements.outputs.exists == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run OWASP Dependency-Check (Action)
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'unsicheres-projekt-mit-bekannt'
          format: 'ALL'
          outputDirectory: 'reports'
          scanSet: 'requirements.txt'
      
      - name: Upload Dependency-Check Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-reports
          path: reports/
          retention-days: 30
